#!/usr/bin/env bash
set -ex
SOURCE_DIR="$(cd "$(dirname "$0")/.." && pwd)"

# First validate required tools are installed
which gh || exit 1
which git || exit 1
which php || exit 1
php -m | grep yaml || exit 1

# TODO: validate PHP version

# Validate inputs
repo="$1"

if [[ -z "$repo" ]]; then
  echo "Usage: $0 [repository url|directory path]";
  exit 1
fi

# Now clone the passed repo
is_repo=
if [[ "$repo" = git@* ]]; then
  is_repo=1
  mkdir -p repo
  cd repo
  name=$(echo "${repo#*/}" | cut -d. -f1)
  if [[ -d "$name" ]]; then
    cd "$name"
    git clean -fdx
    git fetch
    git pull origin main
  else
    git clone "$repo" "$name"
    cd "$name"
  fi

  # Check that the destination branch is merged
  if git ls-remote --exit-code origin codestyle-update; then
    echo "The target branch is not merged. Please merge it first and rerun the script.";
    exit 1
  fi
else
  if [[ ! -d "$repo" ]]; then
    echo 'The directory to the project '"$repo"' does not exist'
    exit 1
  fi

  cd "$repo"
fi

# Update files in repository
cp -r "$SOURCE_DIR/skel/." .

# Check that required directories exist and create it otherwise
mkdir -p ./{src,test}

# Check required composer dependencies
declare -A packages=(
  [phpstan/phpstan]="^1.8"
  [slevomat/coding-standard]="^8.5"
  [squizlabs/php_codesniffer]="^3.7"
)

for package in "${!packages[@]}"; do
  if ! composer show --self | grep "$package"; then
    composer require --dev "$package":"${packages[$package]}"
  fi
done

branch="codestyle-update"
# Check if we have files updated and create the pull request
updated=
if test -d .git; then
  updated=$(git status -s)
fi

if [[ -n "$is_repo" && -n "$updated" ]]; then
  git add .
  if git branch -a | grep " ${branch}$"; then
    git branch -D "$branch"
  fi
  git checkout -b "$branch"
  git commit -m 'Update PHP codestyle to the latest version'
  git push origin codestyle-update
  gh pr create --title "Update PHP codestyle" --body "Update PHP codestyle to the latest version"
fi

echo 'Done'
